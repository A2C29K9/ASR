{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Speech recognizes sensitive words \u00b6 \u8bed\u97f3\u8f6c\u6587\u672c\u8f6c\u8bed\u97f3 \u00b6 \u5b89\u88c5\u4f9d\u8d56 \u00b6 pip install pyaudio # \u97f3\u9891\u526a\u8f91\u5e93 pip install numpy # \u6570\u5b66\u8fd0\u7b97\u5e93 pip install matplotlib # plot\u7ed8\u56fe\u5e93 pip install scipy # \u97f3\u9891\u5904\u7406\u5e93 pip install python_speech_features # \u8bed\u97f3\u5e93 pip install pyttsx3 # \u6587\u672c\u8f6c\u8bed\u97f3\u5e93,tts # \u955c\u50cf:pip install -i https://mirrors.aliyun.com/pypi/simple pyttsx3 pip install comtypes # \u8bfb\u53d6\u6587\u672c\u8f6c\u6210\u8bed\u97f3.SpeechLib pip install PocketSphinx # \u8f7b\u91cf\u7ea7\u8bed\u97f3\u8f6c\u6362\u6587\u672c\u7684\u5f00\u6e90 API pip install SpeechRecognition # \u8bed\u97f3\u8bc6\u522b\u5e93 \u6587\u672c\u8f6c\u8bed\u97f3 \u00b6 \u4f7f\u7528 pyttsx import pyttsx3 as pyttsx # \u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u83b7\u53d6\u8bb2\u8bdd\u5bf9\u8c61 engine = pyttsx . init () engine . say ( '2022\u5e7411\u670811\u65e5' ) engine . runAndWait () - \u4f7f\u7528 SAPI from win32com.client import Dispatch # \u83b7\u53d6\u8bb2\u8bdd\u5bf9\u8c61 speaker = Dispatch ( 'SAPI.SpVoice' ) # \u8bb2\u8bdd\u5185\u5bb9 speaker . Speak ( '\u4f60\u597d\uff01' ) speaker . Speak ( '\u7761\u5f97\u8fd8\u597d\u5417\uff1f' ) # \u91ca\u653e\u5bf9\u8c61 del speaker - \u4f7f\u7528 SpeechLib \u4f7f\u7528 SpeechLib\uff0c\u53ef\u4ee5\u4ece\u6587\u672c\u6587\u4ef6\u4e2d\u83b7\u53d6\u8f93\u5165\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u4e3a\u8bed\u97f3\u3002 from comtypes.client import CreateObject from comtypes.gen import SpeechLib # \u83b7\u53d6\u8bed\u97f3\u5bf9\u8c61,\u6e90\u5934 engine = CreateObject ( 'SAPI.SpVoice' ) # \u8f93\u51fa\u5230\u76ee\u6807\u5bf9\u8c61\u7684\u6d41 stream = CreateObject ( 'SAPI.SpFileStream' ) infile = 'demo.txt' outfile = 'demo_audio.wav' # \u83b7\u53d6\u6d41\u5199\u5165\u901a\u9053 stream . open ( outfile , SpeechLib . SSFMCreateForWrite ) # \u7ed9\u8bed\u97f3\u6e90\u5934\u6dfb\u52a0\u8f93\u51fa\u6d41 engine . AudioOutputStream = stream # \u8bfb\u53d6\u6587\u672c\u5185\u5bb9 # \u6253\u5f00\u6587\u4ef6 f = open ( infile , 'r' , encoding = 'utf-8' ) # \u8bfb\u53d6\u6587\u672c\u5185\u5bb9 theText = f . read () # \u5173\u95ed\u6d41\u5bf9\u8c61 f . close () # \u8bed\u97f3\u5bf9\u8c61\uff0c\u8bfb\u53d6\u6587\u672c\u5185\u5bb9 engine . speak ( theText ) stream . close () \u8bed\u97f3\u8f6c\u6587\u672c \u00b6 \u4f7f\u7528 PocketSphinx PocketSphinx \u662f\u4e00\u4e2a\u7528\u4e8e\u8bed\u97f3\u8f6c\u6362\u6587\u672c\u7684\u5f00\u6e90 API\u3002\u5b83\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u8bed\u97f3\u8bc6\u522b\u5f15\u64ce\uff0c \u5c3d\u7ba1\u5728\u684c\u9762\u7aef\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u5b83\u8fd8\u4e13\u95e8\u4e3a\u624b\u673a\u548c\u79fb\u52a8\u8bbe\u5907\u505a\u8fc7\u8c03\u4f18\u3002 import speech_recognition as sr # \u83b7\u53d6\u8bed\u97f3\u6587\u4ef6 audio_file = 'demo_audio.wav' # \u83b7\u53d6\u8bc6\u522b\u8bed\u97f3\u5185\u5bb9\u7684\u5bf9\u8c61 r = sr . Recognizer () # \u6253\u5f00\u8bed\u97f3\u6587\u4ef6 with sr . AudioFile ( audio_file ) as source : audio = r . record ( source ) # \u5c06\u8bed\u97f3\u8f6c\u5316\u4e3a\u6587\u672c # print('\u6587\u672c\u5185\u5bb9:', r.recognize_sphinx(audio)) # recognize_sphinx() \u53c2\u6570\u4e2dlanguage='en-US' \u9ed8\u8ba4\u662f\u82f1\u8bed print ( '\u6587\u672c\u5185\u5bb9:' , r . recognize_sphinx ( audio , language = 'zh-CN' )) \u666e\u901a\u8bdd\u8bc6\u522b\u95ee\u9898 \u00b6 speech_recognition \u9ed8\u8ba4\u8bc6\u522b\u82f1\u6587\uff0c\u662f\u4e0d\u652f\u6301\u4e2d\u6587\u7684\uff0c\u9700\u8981\u5728Sphinx\u8bed\u97f3\u8bc6\u522b\u5de5\u5177\u5305\u91cc\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7684 \u666e\u901a\u8bdd\u5305 \u548c \u8bed\u8a00\u6a21\u578b \u3002 https://sourceforge.net/projects/cmusphinx/files/Acoustic%20and%20Language%20Models/ \u5c06zh-CN\u76ee\u5f55\u4e22\u8fdb ../Lib/site-packages/speech_recognition \u3002 \u97f3\u9891\u89e3\u6790 \u00b6 \u53ef\u89c6\u5316\u97f3\u9891\u4fe1\u53f7 - \u4ece\u6587\u4ef6\u8bfb\u53d6\u5e76\u5904\u7406\u5b83 \u00b6 \u8fd9\u662f\u6784\u5efa\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7406\u89e3\u97f3\u9891\u4fe1\u53f7\u7684\u7ed3\u6784\u3002\u4f7f\u7528\u97f3\u9891\u4fe1\u53f7\u53ef\u4ee5\u9075\u5faa\u7684\u4e00\u4e9b\u5e38\u89c1\u6b65\u9aa4\u5982\u4e0b \u8bb0\u5f55 \u5f53\u60a8\u5fc5\u987b\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u97f3\u9891\u4fe1\u53f7\u65f6\uff0c\u9996\u5148\u4f7f\u7528\u9ea6\u514b\u98ce\u5f55\u5236\u5b83\u3002 \u91c7\u6837 \u4f7f\u7528\u9ea6\u514b\u98ce\u5f55\u5236\u65f6\uff0c\u4fe1\u53f7\u4ee5\u6570\u5b57\u5316\u5f62\u5f0f\u5b58\u50a8\u3002\u4f46\u662f\u8981\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff0c\u673a\u5668\u9700\u8981\u5b83\u4eec\u4ee5\u79bb\u6563\u7684\u6570\u5b57\u5f62\u5f0f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u7279\u5b9a\u9891\u7387\u8fdb\u884c\u91c7\u6837\u5e76\u5c06\u4fe1\u53f7\u8f6c\u6362\u4e3a\u79bb\u6563\u6570\u5b57\u5f62\u5f0f\u3002\u9009\u62e9\u9ad8\u9891\u91c7\u6837\u610f\u5473\u7740\u5f53\u4eba\u4eec\u542c\u5230\u4fe1\u53f7\u65f6\uff0c\u4ed6\u4eec\u4f1a\u5c06\u5176\u89c6\u4e3a\u8fde\u7eed\u7684\u97f3\u9891\u4fe1\u53f7\u3002 \u4f8b \u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u4f7f\u7528Python\u5206\u6790\u97f3\u9891\u4fe1\u53f7\u7684\u9010\u6b65\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u3002\u8be5\u97f3\u9891\u4fe1\u53f7\u7684\u9891\u7387\u4e3a44,100HZ\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c\uff1a\u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5982\u4e0b\u6240\u793a frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/audio_file.wav\" ) \u4f7f\u7528\u663e\u793a\u7684\u547d\u4ee4\u663e\u793a\u97f3\u9891\u4fe1\u53f7\u7684\u91c7\u6837\u9891\u7387\uff0c\u4fe1\u53f7\u7684\u6570\u636e\u7c7b\u578b\u53ca\u5176\u6301\u7eed\u65f6\u95f4\u7b49\u53c2\u6570 print ( ' \\n Signal shape:' , audio_signal . shape ) print ( 'Signal Datatype:' , audio_signal . dtype ) print ( 'Signal duration:' , round ( audio_signal . shape [ 0 ] / float ( frequency_sampling ), 2 ), 'seconds' ) \u6b64\u6b65\u9aa4\u6d89\u53ca\u5bf9\u4fe1\u53f7\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5982\u4e0b\u6240\u793a audio_signal = audio_signal / np . power ( 2 , 15 ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ece\u6b64\u4fe1\u53f7\u4e2d\u63d0\u53d6\u524d100\u4e2a\u503c\u4ee5\u8fdb\u884c\u53ef\u89c6\u5316\u3002\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 audio_signal = audio_signal [: 100 ] time_axis = 1000 * np . arange ( 0 , len ( signal ), 1 ) / float ( frequency_sampling ) \u73b0\u5728\uff0c\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u53ef\u89c6\u5316\u4fe1\u53f7 plt . plot ( time_axis , signal , color = 'blue' ) plt . xlabel ( 'Time (milliseconds)' ) plt . ylabel ( 'Amplitude' ) plt . title ( 'Input audio signal' ) plt . show () \u60a8\u5c06\u80fd\u591f\u770b\u5230\u8f93\u51fa\u56fe\u5f62\u548c\u4e3a\u4e0a\u8ff0\u97f3\u9891\u4fe1\u53f7\u63d0\u53d6\u7684\u6570\u636e\uff0c\u5982\u6b64\u5904\u56fe\u50cf\u6240\u793a Signal shape: ( 132300 , ) Signal Datatype: int16 Signal duration: 3 .0 seconds \u8868\u5f81\u97f3\u9891\u4fe1\u53f7\uff1a\u8f6c\u6362\u4e3a\u9891\u57df \u00b6 \u8868\u5f81\u97f3\u9891\u4fe1\u53f7\u6d89\u53ca\u5c06\u65f6\u57df\u4fe1\u53f7\u8f6c\u6362\u4e3a\u9891\u57df\uff0c\u5e76\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u7406\u89e3\u5176\u9891\u7387\u5206\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u6709\u5173\u4fe1\u53f7\u7684\u5927\u91cf\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u6570\u5b66\u5de5\u5177\u6765\u6267\u884c\u6b64\u8f6c\u6362\u3002 \u4f8b \u4ee5\u4e0b\u793a\u4f8b\u9010\u6b65\u663e\u793a\u5982\u4f55\u4f7f\u7528\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u7684Python\u6765\u8868\u5f81\u4fe1\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u6570\u5b66\u5de5\u5177\u5c06\u5176\u8f6c\u6362\u4e3a\u9891\u57df\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c\uff1a\u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5982\u6b64\u5904\u7684\u547d\u4ee4\u6240\u793a frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/sample.wav\" ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u663e\u793a\u97f3\u9891\u4fe1\u53f7\u7684\u91c7\u6837\u9891\u7387\uff0c\u4fe1\u53f7\u7684\u6570\u636e\u7c7b\u578b\u53ca\u5176\u6301\u7eed\u65f6\u95f4\u7b49\u53c2\u6570 print ( ' \\n Signal shape:' , audio_signal . shape ) print ( 'Signal Datatype:' , audio_signal . dtype ) print ( 'Signal duration:' , round ( audio_signal . shape [ 0 ] / float ( frequency_sampling ), 2 ), 'seconds' ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4fe1\u53f7\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5982\u4ee5\u4e0b\u547d\u4ee4\u6240\u793a - audio_signal = audio_signal / np . power ( 2 , 15 ) \u8be5\u6b65\u9aa4\u6d89\u53ca\u63d0\u53d6\u4fe1\u53f7\u7684\u957f\u5ea6\u548c\u957f\u5ea6\u3002\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 - length_signal = len ( audio_signal ) half_length = np . ceil (( length_signal + 1 ) / 2.0 ) . astype ( np . int ) \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5e94\u7528\u6570\u5b66\u5de5\u5177\u6765\u8f6c\u6362\u4e3a\u9891\u57df\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5085\u7acb\u53f6\u53d8\u6362\u3002 signal_frequency = np . fft . fft ( audio_signal ) \u73b0\u5728\uff0c\u505a\u9891\u57df\u4fe1\u53f7\u7684\u5f52\u4e00\u5316\u5e76\u5c06\u5176\u5e73\u65b9 - signal_frequency = abs ( signal_frequency [ 0 : half_length ]) / length_signal signal_frequency **= 2 \u63a5\u4e0b\u6765\uff0c\u63d0\u53d6\u9891\u7387\u53d8\u6362\u4fe1\u53f7\u7684\u957f\u5ea6\u548c\u957f\u5ea6 - len_fts = len ( signal_frequency ) \u6ce8\u610f\uff0c\u5fc5\u987b\u8c03\u6574\u5085\u91cc\u53f6\u53d8\u6362\u4fe1\u53f7\u4ee5\u53ca\u5947\u6570\u60c5\u51b5\u3002 if length_signal % 2 : signal_frequency [ 1 : len_fts ] *= 2 else : signal_frequency [ 1 : len_fts - 1 ] *= 2 \u73b0\u5728\uff0c\u4ee5\u5206\u8d1d\uff08dB\uff09\u63d0\u53d6\u529f\u7387 - signal_power = 10 * np . log10 ( signal_frequency ) \u4e3aX\u8f74\u8c03\u6574\u4ee5kHz\u4e3a\u5355\u4f4d\u7684\u9891\u7387 x_axis = np . arange ( 0 , len_half , 1 ) * ( frequency_sampling / length_signal ) / 1000.0 \u73b0\u5728\uff0c\u53ef\u89c6\u5316\u4fe1\u53f7\u7684\u7279\u5f81\u63cf\u8ff0\u5982\u4e0b plt . figure () plt . plot ( x_axis , signal_power , color = 'black' ) plt . xlabel ( 'Frequency (kHz)' ) plt . ylabel ( 'Signal power (dB)' ) plt . show () \u60a8\u53ef\u4ee5\u89c2\u5bdf\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u751f\u6210\u5355\u8c03\u97f3\u9891\u4fe1\u53f7 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u5df2\u7ecf\u770b\u5230\u7684\u4e24\u4e2a\u6b65\u9aa4\u5bf9\u4e8e\u4e86\u89e3\u4fe1\u53f7\u975e\u5e38\u91cd\u8981\u3002\u73b0\u5728\uff0c\u5982\u679c\u8981\u751f\u6210\u5e26\u6709\u4e00\u4e9b\u9884\u5b9a\u4e49\u53c2\u6570\u7684\u97f3\u9891\u4fe1\u53f7\uff0c\u6b64\u6b65\u9aa4\u5c06\u975e\u5e38\u6709\u7528\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u6b65\u9aa4\u4f1a\u5c06\u97f3\u9891\u4fe1\u53f7\u4fdd\u5b58\u5728\u8f93\u51fa\u6587\u4ef6\u4e2d\u3002 \u4f8b \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Python\u751f\u6210\u5355\u8c03\u4fe1\u53f7\uff0c\u8be5\u4fe1\u53f7\u5c06\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u3002\u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u91c7\u53d6\u4ee5\u4e0b\u6b65\u9aa4 - \u5982\u56fe\u6240\u793a\u5bfc\u5165\u5fc5\u8981\u7684\u5305 - import numpy as np import matplotlib.pyplot as plt from scipy.io.wavfile import write \u63d0\u4f9b\u5e94\u4fdd\u5b58\u8f93\u51fa\u6587\u4ef6\u7684\u6587\u4ef6 output_file = 'audio_signal_generated.wav' \u73b0\u5728\uff0c\u6307\u5b9a\u60a8\u9009\u62e9\u7684\u53c2\u6570\uff0c\u5982\u56fe\u6240\u793a - duration = 4 # in seconds frequency_sampling = 44100 # in Hz frequency_tone = 784 min_val = - 4 * np . pi max_val = 4 * np . pi \u5728\u8fd9\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u97f3\u9891\u4fe1\u53f7\uff0c\u5982\u56fe\u6240\u793a - t = np . linspace ( min_val , max_val , duration * frequency_sampling ) audio_signal = np . sin ( 2 * np . pi * tone_freq * t ) \u73b0\u5728\uff0c\u5c06\u97f3\u9891\u6587\u4ef6\u4fdd\u5b58\u5728\u8f93\u51fa\u6587\u4ef6\u4e2d - write ( output_file , frequency_sampling , signal_scaled ) \u63d0\u53d6\u56fe\u8868\u7684\u524d100\u4e2a\u503c\uff0c\u5982\u56fe\u6240\u793a - audio_signal = audio_signal [: 100 ] time_axis = 1000 * np . arange ( 0 , len ( signal ), 1 ) / float ( sampling_freq ) \u73b0\u5728\uff0c\u5c06\u751f\u6210\u7684\u97f3\u9891\u4fe1\u53f7\u53ef\u89c6\u5316\u5982\u4e0b - plt . plot ( time_axis , signal , color = 'blue' ) plt . xlabel ( 'Time in milliseconds' ) plt . ylabel ( 'Amplitude' ) plt . title ( 'Generated audio signal' ) plt . show () \u60a8\u53ef\u4ee5\u89c2\u5bdf\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u60c5\u8282 \u751f\u6210\u5355\u8c03\u97f3\u9891\u4fe1\u53f7 \u00b6 \u8bed\u97f3\u7279\u5f81\u63d0\u53d6 \u8fd9\u662f\u6784\u5efa\u8bed\u97f3\u8bc6\u522b\u5668\u7684\u6700\u91cd\u8981\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5728\u5c06\u8bed\u97f3\u4fe1\u53f7\u8f6c\u6362\u4e3a\u9891\u57df\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u7528\u7684\u7279\u5f81\u5411\u91cf\u5f62\u5f0f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u5f81\u63d0\u53d6\u6280\u672f\uff0c\u5982MFCC\uff0cPLP\uff0cPLP- RASTA\u7b49\u3002 \u4f8b \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Python\uff0c\u4f7f\u7528MFCC\u6280\u672f\u9010\u6b65\u4ece\u4fe1\u53f7\u4e2d\u63d0\u53d6\u4fe1\u53f7\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a - import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile from python_speech_features import mfcc , logfbank \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c - \u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\u3002 frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/audio_file.wav\" ) \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u91c7\u7528\u524d15000\u4e2a\u6837\u672c\u8fdb\u884c\u5206\u6790\u3002 audio_signal = audio_signal [: 15000 ] \u4f7f\u7528MFCC\u6280\u672f\u5e76\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u63d0\u53d6MFCC\u529f\u80fd - features_mfcc = mfcc ( audio_signal , frequency_sampling ) \u73b0\u5728\uff0c\u6253\u5370MFCC\u53c2\u6570\uff0c\u5982\u56fe\u6240\u793a - print ( ' \\n MFCC: \\n Number of windows =' , features_mfcc . shape [ 0 ]) print ( 'Length of each feature =' , features_mfcc . shape [ 1 ]) \u73b0\u5728\uff0c\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u7ed8\u5236\u548c\u53ef\u89c6\u5316MFCC\u529f\u80fd - features_mfcc = features_mfcc . T plt . matshow ( features_mfcc ) plt . title ( 'MFCC' ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5982\u56fe\u6240\u793a\u7684\u8fc7\u6ee4\u5668\u5e93\u529f\u80fd - \u63d0\u53d6\u8fc7\u6ee4\u5668\u5e93\u529f\u80fd - filterbank_features = logfbank ( audio_signal , frequency_sampling ) \u73b0\u5728\uff0c\u6253\u5370filterbank\u53c2\u6570\u3002 print ( ' \\n Filter bank: \\n Number of windows =' , filterbank_features . shape [ 0 ]) print ( 'Length of each feature =' , filterbank_features . shape [ 1 ]) \u73b0\u5728\uff0c\u7ed8\u5236\u5e76\u53ef\u89c6\u5316\u6ee4\u6ce2\u5668\u7ec4\u529f\u80fd\u3002 filterbank_features = filterbank_features . T plt . matshow ( filterbank_features ) plt . title ( 'Filter bank' ) plt . show () \u6839\u636e\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u89c2\u5bdf\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a\u56fe1\u8868\u793aMFCC\uff0c\u56fe2\u8868\u793a\u6ee4\u6ce2\u5668\u7ec4 \u8bed\u97f3\u7279\u5f81\u63d0\u53d6 \u00b6 \u8fc7\u6ee4\u94f6\u884c \u5bf9\u53e3\u8bed\u7684\u8ba4\u8bc6 \u8bed\u97f3\u8bc6\u522b\u610f\u5473\u7740\u5f53\u4eba\u7c7b\u8bf4\u8bdd\u65f6\uff0c\u673a\u5668\u4f1a\u7406\u89e3\u5b83\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528Python\u4e2d\u7684Google Speech API\u6765\u5b9e\u73b0\u5b83\u3002\u6211\u4eec\u9700\u8981\u4e3a\u6b64\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\u5305 - Pyaudio - \u53ef\u4ee5\u4f7f\u7528 pip install Pyaudio \u547d\u4ee4 \u5b89\u88c5 \u3002 SpeechRecognition - \u53ef\u4ee5\u4f7f\u7528 pip install SpeechRecognition \u5b89\u88c5\u6b64\u8f6f\u4ef6\u5305 \u3002 Google-Speech-API - \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 pip install google-api-python-client\u8fdb\u884c\u5b89\u88c5 \u3002 \u4f8b \u8bf7\u6ce8\u610f\u4ee5\u4e0b\u793a\u4f8b\u4ee5\u4e86\u89e3\u53e3\u5934\u8bed\u8a00\u7684\u8bc6\u522b \u5982\u56fe\u6240\u793a\u5bfc\u5165\u5fc5\u8981\u7684\u5305 import speech_recognition as sr \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a recording = sr . Recognizer () \u73b0\u5728\uff0c Microphone\uff08\uff09 \u6a21\u5757\u5c06\u628a\u58f0\u97f3\u4f5c\u4e3a\u8f93\u5165 with sr . Microphone () as source : recording . adjust_for_ambient_noise ( source ) print ( \"Please Say something:\" ) audio = recording . listen ( source ) \u73b0\u5728\uff0c\u8c37\u6b4cAPI\u5c06\u8bc6\u522b\u8bed\u97f3\u5e76\u63d0\u4f9b\u8f93\u51fa\u3002 try : print ( \"You said: \\n \" + recording . recognize_google ( audio )) except Exception as e : print ( e ) \u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa Please Say Something: You said: \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8bf4 codingdict.com \uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u6b63\u786e\u8bc6\u522b\u5b83\uff0c\u5982\u4e0b\u6240\u793a codingdict.com","title":"Home"},{"location":"#speech-recognizes-sensitive-words","text":"","title":"Speech recognizes sensitive words"},{"location":"#_1","text":"","title":"\u8bed\u97f3\u8f6c\u6587\u672c\u8f6c\u8bed\u97f3"},{"location":"#_2","text":"pip install pyaudio # \u97f3\u9891\u526a\u8f91\u5e93 pip install numpy # \u6570\u5b66\u8fd0\u7b97\u5e93 pip install matplotlib # plot\u7ed8\u56fe\u5e93 pip install scipy # \u97f3\u9891\u5904\u7406\u5e93 pip install python_speech_features # \u8bed\u97f3\u5e93 pip install pyttsx3 # \u6587\u672c\u8f6c\u8bed\u97f3\u5e93,tts # \u955c\u50cf:pip install -i https://mirrors.aliyun.com/pypi/simple pyttsx3 pip install comtypes # \u8bfb\u53d6\u6587\u672c\u8f6c\u6210\u8bed\u97f3.SpeechLib pip install PocketSphinx # \u8f7b\u91cf\u7ea7\u8bed\u97f3\u8f6c\u6362\u6587\u672c\u7684\u5f00\u6e90 API pip install SpeechRecognition # \u8bed\u97f3\u8bc6\u522b\u5e93","title":"\u5b89\u88c5\u4f9d\u8d56"},{"location":"#_3","text":"\u4f7f\u7528 pyttsx import pyttsx3 as pyttsx # \u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u83b7\u53d6\u8bb2\u8bdd\u5bf9\u8c61 engine = pyttsx . init () engine . say ( '2022\u5e7411\u670811\u65e5' ) engine . runAndWait () - \u4f7f\u7528 SAPI from win32com.client import Dispatch # \u83b7\u53d6\u8bb2\u8bdd\u5bf9\u8c61 speaker = Dispatch ( 'SAPI.SpVoice' ) # \u8bb2\u8bdd\u5185\u5bb9 speaker . Speak ( '\u4f60\u597d\uff01' ) speaker . Speak ( '\u7761\u5f97\u8fd8\u597d\u5417\uff1f' ) # \u91ca\u653e\u5bf9\u8c61 del speaker - \u4f7f\u7528 SpeechLib \u4f7f\u7528 SpeechLib\uff0c\u53ef\u4ee5\u4ece\u6587\u672c\u6587\u4ef6\u4e2d\u83b7\u53d6\u8f93\u5165\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u4e3a\u8bed\u97f3\u3002 from comtypes.client import CreateObject from comtypes.gen import SpeechLib # \u83b7\u53d6\u8bed\u97f3\u5bf9\u8c61,\u6e90\u5934 engine = CreateObject ( 'SAPI.SpVoice' ) # \u8f93\u51fa\u5230\u76ee\u6807\u5bf9\u8c61\u7684\u6d41 stream = CreateObject ( 'SAPI.SpFileStream' ) infile = 'demo.txt' outfile = 'demo_audio.wav' # \u83b7\u53d6\u6d41\u5199\u5165\u901a\u9053 stream . open ( outfile , SpeechLib . SSFMCreateForWrite ) # \u7ed9\u8bed\u97f3\u6e90\u5934\u6dfb\u52a0\u8f93\u51fa\u6d41 engine . AudioOutputStream = stream # \u8bfb\u53d6\u6587\u672c\u5185\u5bb9 # \u6253\u5f00\u6587\u4ef6 f = open ( infile , 'r' , encoding = 'utf-8' ) # \u8bfb\u53d6\u6587\u672c\u5185\u5bb9 theText = f . read () # \u5173\u95ed\u6d41\u5bf9\u8c61 f . close () # \u8bed\u97f3\u5bf9\u8c61\uff0c\u8bfb\u53d6\u6587\u672c\u5185\u5bb9 engine . speak ( theText ) stream . close ()","title":"\u6587\u672c\u8f6c\u8bed\u97f3"},{"location":"#_4","text":"\u4f7f\u7528 PocketSphinx PocketSphinx \u662f\u4e00\u4e2a\u7528\u4e8e\u8bed\u97f3\u8f6c\u6362\u6587\u672c\u7684\u5f00\u6e90 API\u3002\u5b83\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u8bed\u97f3\u8bc6\u522b\u5f15\u64ce\uff0c \u5c3d\u7ba1\u5728\u684c\u9762\u7aef\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u5b83\u8fd8\u4e13\u95e8\u4e3a\u624b\u673a\u548c\u79fb\u52a8\u8bbe\u5907\u505a\u8fc7\u8c03\u4f18\u3002 import speech_recognition as sr # \u83b7\u53d6\u8bed\u97f3\u6587\u4ef6 audio_file = 'demo_audio.wav' # \u83b7\u53d6\u8bc6\u522b\u8bed\u97f3\u5185\u5bb9\u7684\u5bf9\u8c61 r = sr . Recognizer () # \u6253\u5f00\u8bed\u97f3\u6587\u4ef6 with sr . AudioFile ( audio_file ) as source : audio = r . record ( source ) # \u5c06\u8bed\u97f3\u8f6c\u5316\u4e3a\u6587\u672c # print('\u6587\u672c\u5185\u5bb9:', r.recognize_sphinx(audio)) # recognize_sphinx() \u53c2\u6570\u4e2dlanguage='en-US' \u9ed8\u8ba4\u662f\u82f1\u8bed print ( '\u6587\u672c\u5185\u5bb9:' , r . recognize_sphinx ( audio , language = 'zh-CN' ))","title":"\u8bed\u97f3\u8f6c\u6587\u672c"},{"location":"#_5","text":"speech_recognition \u9ed8\u8ba4\u8bc6\u522b\u82f1\u6587\uff0c\u662f\u4e0d\u652f\u6301\u4e2d\u6587\u7684\uff0c\u9700\u8981\u5728Sphinx\u8bed\u97f3\u8bc6\u522b\u5de5\u5177\u5305\u91cc\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7684 \u666e\u901a\u8bdd\u5305 \u548c \u8bed\u8a00\u6a21\u578b \u3002 https://sourceforge.net/projects/cmusphinx/files/Acoustic%20and%20Language%20Models/ \u5c06zh-CN\u76ee\u5f55\u4e22\u8fdb ../Lib/site-packages/speech_recognition \u3002","title":"\u666e\u901a\u8bdd\u8bc6\u522b\u95ee\u9898"},{"location":"#_6","text":"","title":"\u97f3\u9891\u89e3\u6790"},{"location":"#-","text":"\u8fd9\u662f\u6784\u5efa\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7406\u89e3\u97f3\u9891\u4fe1\u53f7\u7684\u7ed3\u6784\u3002\u4f7f\u7528\u97f3\u9891\u4fe1\u53f7\u53ef\u4ee5\u9075\u5faa\u7684\u4e00\u4e9b\u5e38\u89c1\u6b65\u9aa4\u5982\u4e0b \u8bb0\u5f55 \u5f53\u60a8\u5fc5\u987b\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u97f3\u9891\u4fe1\u53f7\u65f6\uff0c\u9996\u5148\u4f7f\u7528\u9ea6\u514b\u98ce\u5f55\u5236\u5b83\u3002 \u91c7\u6837 \u4f7f\u7528\u9ea6\u514b\u98ce\u5f55\u5236\u65f6\uff0c\u4fe1\u53f7\u4ee5\u6570\u5b57\u5316\u5f62\u5f0f\u5b58\u50a8\u3002\u4f46\u662f\u8981\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff0c\u673a\u5668\u9700\u8981\u5b83\u4eec\u4ee5\u79bb\u6563\u7684\u6570\u5b57\u5f62\u5f0f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u7279\u5b9a\u9891\u7387\u8fdb\u884c\u91c7\u6837\u5e76\u5c06\u4fe1\u53f7\u8f6c\u6362\u4e3a\u79bb\u6563\u6570\u5b57\u5f62\u5f0f\u3002\u9009\u62e9\u9ad8\u9891\u91c7\u6837\u610f\u5473\u7740\u5f53\u4eba\u4eec\u542c\u5230\u4fe1\u53f7\u65f6\uff0c\u4ed6\u4eec\u4f1a\u5c06\u5176\u89c6\u4e3a\u8fde\u7eed\u7684\u97f3\u9891\u4fe1\u53f7\u3002 \u4f8b \u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u4f7f\u7528Python\u5206\u6790\u97f3\u9891\u4fe1\u53f7\u7684\u9010\u6b65\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u3002\u8be5\u97f3\u9891\u4fe1\u53f7\u7684\u9891\u7387\u4e3a44,100HZ\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c\uff1a\u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5982\u4e0b\u6240\u793a frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/audio_file.wav\" ) \u4f7f\u7528\u663e\u793a\u7684\u547d\u4ee4\u663e\u793a\u97f3\u9891\u4fe1\u53f7\u7684\u91c7\u6837\u9891\u7387\uff0c\u4fe1\u53f7\u7684\u6570\u636e\u7c7b\u578b\u53ca\u5176\u6301\u7eed\u65f6\u95f4\u7b49\u53c2\u6570 print ( ' \\n Signal shape:' , audio_signal . shape ) print ( 'Signal Datatype:' , audio_signal . dtype ) print ( 'Signal duration:' , round ( audio_signal . shape [ 0 ] / float ( frequency_sampling ), 2 ), 'seconds' ) \u6b64\u6b65\u9aa4\u6d89\u53ca\u5bf9\u4fe1\u53f7\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5982\u4e0b\u6240\u793a audio_signal = audio_signal / np . power ( 2 , 15 ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ece\u6b64\u4fe1\u53f7\u4e2d\u63d0\u53d6\u524d100\u4e2a\u503c\u4ee5\u8fdb\u884c\u53ef\u89c6\u5316\u3002\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 audio_signal = audio_signal [: 100 ] time_axis = 1000 * np . arange ( 0 , len ( signal ), 1 ) / float ( frequency_sampling ) \u73b0\u5728\uff0c\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u53ef\u89c6\u5316\u4fe1\u53f7 plt . plot ( time_axis , signal , color = 'blue' ) plt . xlabel ( 'Time (milliseconds)' ) plt . ylabel ( 'Amplitude' ) plt . title ( 'Input audio signal' ) plt . show () \u60a8\u5c06\u80fd\u591f\u770b\u5230\u8f93\u51fa\u56fe\u5f62\u548c\u4e3a\u4e0a\u8ff0\u97f3\u9891\u4fe1\u53f7\u63d0\u53d6\u7684\u6570\u636e\uff0c\u5982\u6b64\u5904\u56fe\u50cf\u6240\u793a Signal shape: ( 132300 , ) Signal Datatype: int16 Signal duration: 3 .0 seconds","title":"\u53ef\u89c6\u5316\u97f3\u9891\u4fe1\u53f7 - \u4ece\u6587\u4ef6\u8bfb\u53d6\u5e76\u5904\u7406\u5b83"},{"location":"#_7","text":"\u8868\u5f81\u97f3\u9891\u4fe1\u53f7\u6d89\u53ca\u5c06\u65f6\u57df\u4fe1\u53f7\u8f6c\u6362\u4e3a\u9891\u57df\uff0c\u5e76\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u7406\u89e3\u5176\u9891\u7387\u5206\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u6709\u5173\u4fe1\u53f7\u7684\u5927\u91cf\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u6570\u5b66\u5de5\u5177\u6765\u6267\u884c\u6b64\u8f6c\u6362\u3002 \u4f8b \u4ee5\u4e0b\u793a\u4f8b\u9010\u6b65\u663e\u793a\u5982\u4f55\u4f7f\u7528\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u7684Python\u6765\u8868\u5f81\u4fe1\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u6570\u5b66\u5de5\u5177\u5c06\u5176\u8f6c\u6362\u4e3a\u9891\u57df\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c\uff1a\u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5982\u6b64\u5904\u7684\u547d\u4ee4\u6240\u793a frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/sample.wav\" ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u663e\u793a\u97f3\u9891\u4fe1\u53f7\u7684\u91c7\u6837\u9891\u7387\uff0c\u4fe1\u53f7\u7684\u6570\u636e\u7c7b\u578b\u53ca\u5176\u6301\u7eed\u65f6\u95f4\u7b49\u53c2\u6570 print ( ' \\n Signal shape:' , audio_signal . shape ) print ( 'Signal Datatype:' , audio_signal . dtype ) print ( 'Signal duration:' , round ( audio_signal . shape [ 0 ] / float ( frequency_sampling ), 2 ), 'seconds' ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4fe1\u53f7\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5982\u4ee5\u4e0b\u547d\u4ee4\u6240\u793a - audio_signal = audio_signal / np . power ( 2 , 15 ) \u8be5\u6b65\u9aa4\u6d89\u53ca\u63d0\u53d6\u4fe1\u53f7\u7684\u957f\u5ea6\u548c\u957f\u5ea6\u3002\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 - length_signal = len ( audio_signal ) half_length = np . ceil (( length_signal + 1 ) / 2.0 ) . astype ( np . int ) \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5e94\u7528\u6570\u5b66\u5de5\u5177\u6765\u8f6c\u6362\u4e3a\u9891\u57df\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5085\u7acb\u53f6\u53d8\u6362\u3002 signal_frequency = np . fft . fft ( audio_signal ) \u73b0\u5728\uff0c\u505a\u9891\u57df\u4fe1\u53f7\u7684\u5f52\u4e00\u5316\u5e76\u5c06\u5176\u5e73\u65b9 - signal_frequency = abs ( signal_frequency [ 0 : half_length ]) / length_signal signal_frequency **= 2 \u63a5\u4e0b\u6765\uff0c\u63d0\u53d6\u9891\u7387\u53d8\u6362\u4fe1\u53f7\u7684\u957f\u5ea6\u548c\u957f\u5ea6 - len_fts = len ( signal_frequency ) \u6ce8\u610f\uff0c\u5fc5\u987b\u8c03\u6574\u5085\u91cc\u53f6\u53d8\u6362\u4fe1\u53f7\u4ee5\u53ca\u5947\u6570\u60c5\u51b5\u3002 if length_signal % 2 : signal_frequency [ 1 : len_fts ] *= 2 else : signal_frequency [ 1 : len_fts - 1 ] *= 2 \u73b0\u5728\uff0c\u4ee5\u5206\u8d1d\uff08dB\uff09\u63d0\u53d6\u529f\u7387 - signal_power = 10 * np . log10 ( signal_frequency ) \u4e3aX\u8f74\u8c03\u6574\u4ee5kHz\u4e3a\u5355\u4f4d\u7684\u9891\u7387 x_axis = np . arange ( 0 , len_half , 1 ) * ( frequency_sampling / length_signal ) / 1000.0 \u73b0\u5728\uff0c\u53ef\u89c6\u5316\u4fe1\u53f7\u7684\u7279\u5f81\u63cf\u8ff0\u5982\u4e0b plt . figure () plt . plot ( x_axis , signal_power , color = 'black' ) plt . xlabel ( 'Frequency (kHz)' ) plt . ylabel ( 'Signal power (dB)' ) plt . show () \u60a8\u53ef\u4ee5\u89c2\u5bdf\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a","title":"\u8868\u5f81\u97f3\u9891\u4fe1\u53f7\uff1a\u8f6c\u6362\u4e3a\u9891\u57df"},{"location":"#_8","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u5df2\u7ecf\u770b\u5230\u7684\u4e24\u4e2a\u6b65\u9aa4\u5bf9\u4e8e\u4e86\u89e3\u4fe1\u53f7\u975e\u5e38\u91cd\u8981\u3002\u73b0\u5728\uff0c\u5982\u679c\u8981\u751f\u6210\u5e26\u6709\u4e00\u4e9b\u9884\u5b9a\u4e49\u53c2\u6570\u7684\u97f3\u9891\u4fe1\u53f7\uff0c\u6b64\u6b65\u9aa4\u5c06\u975e\u5e38\u6709\u7528\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u6b65\u9aa4\u4f1a\u5c06\u97f3\u9891\u4fe1\u53f7\u4fdd\u5b58\u5728\u8f93\u51fa\u6587\u4ef6\u4e2d\u3002 \u4f8b \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Python\u751f\u6210\u5355\u8c03\u4fe1\u53f7\uff0c\u8be5\u4fe1\u53f7\u5c06\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u3002\u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u91c7\u53d6\u4ee5\u4e0b\u6b65\u9aa4 - \u5982\u56fe\u6240\u793a\u5bfc\u5165\u5fc5\u8981\u7684\u5305 - import numpy as np import matplotlib.pyplot as plt from scipy.io.wavfile import write \u63d0\u4f9b\u5e94\u4fdd\u5b58\u8f93\u51fa\u6587\u4ef6\u7684\u6587\u4ef6 output_file = 'audio_signal_generated.wav' \u73b0\u5728\uff0c\u6307\u5b9a\u60a8\u9009\u62e9\u7684\u53c2\u6570\uff0c\u5982\u56fe\u6240\u793a - duration = 4 # in seconds frequency_sampling = 44100 # in Hz frequency_tone = 784 min_val = - 4 * np . pi max_val = 4 * np . pi \u5728\u8fd9\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u97f3\u9891\u4fe1\u53f7\uff0c\u5982\u56fe\u6240\u793a - t = np . linspace ( min_val , max_val , duration * frequency_sampling ) audio_signal = np . sin ( 2 * np . pi * tone_freq * t ) \u73b0\u5728\uff0c\u5c06\u97f3\u9891\u6587\u4ef6\u4fdd\u5b58\u5728\u8f93\u51fa\u6587\u4ef6\u4e2d - write ( output_file , frequency_sampling , signal_scaled ) \u63d0\u53d6\u56fe\u8868\u7684\u524d100\u4e2a\u503c\uff0c\u5982\u56fe\u6240\u793a - audio_signal = audio_signal [: 100 ] time_axis = 1000 * np . arange ( 0 , len ( signal ), 1 ) / float ( sampling_freq ) \u73b0\u5728\uff0c\u5c06\u751f\u6210\u7684\u97f3\u9891\u4fe1\u53f7\u53ef\u89c6\u5316\u5982\u4e0b - plt . plot ( time_axis , signal , color = 'blue' ) plt . xlabel ( 'Time in milliseconds' ) plt . ylabel ( 'Amplitude' ) plt . title ( 'Generated audio signal' ) plt . show () \u60a8\u53ef\u4ee5\u89c2\u5bdf\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u60c5\u8282","title":"\u751f\u6210\u5355\u8c03\u97f3\u9891\u4fe1\u53f7"},{"location":"#_9","text":"\u8bed\u97f3\u7279\u5f81\u63d0\u53d6 \u8fd9\u662f\u6784\u5efa\u8bed\u97f3\u8bc6\u522b\u5668\u7684\u6700\u91cd\u8981\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5728\u5c06\u8bed\u97f3\u4fe1\u53f7\u8f6c\u6362\u4e3a\u9891\u57df\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u7528\u7684\u7279\u5f81\u5411\u91cf\u5f62\u5f0f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u5f81\u63d0\u53d6\u6280\u672f\uff0c\u5982MFCC\uff0cPLP\uff0cPLP- RASTA\u7b49\u3002 \u4f8b \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Python\uff0c\u4f7f\u7528MFCC\u6280\u672f\u9010\u6b65\u4ece\u4fe1\u53f7\u4e2d\u63d0\u53d6\u4fe1\u53f7\u3002 \u5bfc\u5165\u5fc5\u8981\u7684\u5305\uff0c\u5982\u4e0b\u6240\u793a - import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile from python_speech_features import mfcc , logfbank \u73b0\u5728\uff0c\u8bfb\u53d6\u5b58\u50a8\u7684\u97f3\u9891\u6587\u4ef6\u3002\u5b83\u5c06\u8fd4\u56de\u4e24\u4e2a\u503c - \u91c7\u6837\u9891\u7387\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u63d0\u4f9b\u5b58\u50a8\u5b83\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\u3002 frequency_sampling , audio_signal = wavfile . read ( \"/Users/admin/audio_file.wav\" ) \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u91c7\u7528\u524d15000\u4e2a\u6837\u672c\u8fdb\u884c\u5206\u6790\u3002 audio_signal = audio_signal [: 15000 ] \u4f7f\u7528MFCC\u6280\u672f\u5e76\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u63d0\u53d6MFCC\u529f\u80fd - features_mfcc = mfcc ( audio_signal , frequency_sampling ) \u73b0\u5728\uff0c\u6253\u5370MFCC\u53c2\u6570\uff0c\u5982\u56fe\u6240\u793a - print ( ' \\n MFCC: \\n Number of windows =' , features_mfcc . shape [ 0 ]) print ( 'Length of each feature =' , features_mfcc . shape [ 1 ]) \u73b0\u5728\uff0c\u4f7f\u7528\u4e0b\u9762\u7ed9\u51fa\u7684\u547d\u4ee4\u7ed8\u5236\u548c\u53ef\u89c6\u5316MFCC\u529f\u80fd - features_mfcc = features_mfcc . T plt . matshow ( features_mfcc ) plt . title ( 'MFCC' ) \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5982\u56fe\u6240\u793a\u7684\u8fc7\u6ee4\u5668\u5e93\u529f\u80fd - \u63d0\u53d6\u8fc7\u6ee4\u5668\u5e93\u529f\u80fd - filterbank_features = logfbank ( audio_signal , frequency_sampling ) \u73b0\u5728\uff0c\u6253\u5370filterbank\u53c2\u6570\u3002 print ( ' \\n Filter bank: \\n Number of windows =' , filterbank_features . shape [ 0 ]) print ( 'Length of each feature =' , filterbank_features . shape [ 1 ]) \u73b0\u5728\uff0c\u7ed8\u5236\u5e76\u53ef\u89c6\u5316\u6ee4\u6ce2\u5668\u7ec4\u529f\u80fd\u3002 filterbank_features = filterbank_features . T plt . matshow ( filterbank_features ) plt . title ( 'Filter bank' ) plt . show () \u6839\u636e\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u89c2\u5bdf\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a\u56fe1\u8868\u793aMFCC\uff0c\u56fe2\u8868\u793a\u6ee4\u6ce2\u5668\u7ec4","title":"\u751f\u6210\u5355\u8c03\u97f3\u9891\u4fe1\u53f7"},{"location":"#_10","text":"\u8fc7\u6ee4\u94f6\u884c \u5bf9\u53e3\u8bed\u7684\u8ba4\u8bc6 \u8bed\u97f3\u8bc6\u522b\u610f\u5473\u7740\u5f53\u4eba\u7c7b\u8bf4\u8bdd\u65f6\uff0c\u673a\u5668\u4f1a\u7406\u89e3\u5b83\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528Python\u4e2d\u7684Google Speech API\u6765\u5b9e\u73b0\u5b83\u3002\u6211\u4eec\u9700\u8981\u4e3a\u6b64\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\u5305 - Pyaudio - \u53ef\u4ee5\u4f7f\u7528 pip install Pyaudio \u547d\u4ee4 \u5b89\u88c5 \u3002 SpeechRecognition - \u53ef\u4ee5\u4f7f\u7528 pip install SpeechRecognition \u5b89\u88c5\u6b64\u8f6f\u4ef6\u5305 \u3002 Google-Speech-API - \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 pip install google-api-python-client\u8fdb\u884c\u5b89\u88c5 \u3002 \u4f8b \u8bf7\u6ce8\u610f\u4ee5\u4e0b\u793a\u4f8b\u4ee5\u4e86\u89e3\u53e3\u5934\u8bed\u8a00\u7684\u8bc6\u522b \u5982\u56fe\u6240\u793a\u5bfc\u5165\u5fc5\u8981\u7684\u5305 import speech_recognition as sr \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a recording = sr . Recognizer () \u73b0\u5728\uff0c Microphone\uff08\uff09 \u6a21\u5757\u5c06\u628a\u58f0\u97f3\u4f5c\u4e3a\u8f93\u5165 with sr . Microphone () as source : recording . adjust_for_ambient_noise ( source ) print ( \"Please Say something:\" ) audio = recording . listen ( source ) \u73b0\u5728\uff0c\u8c37\u6b4cAPI\u5c06\u8bc6\u522b\u8bed\u97f3\u5e76\u63d0\u4f9b\u8f93\u51fa\u3002 try : print ( \"You said: \\n \" + recording . recognize_google ( audio )) except Exception as e : print ( e ) \u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa Please Say Something: You said: \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8bf4 codingdict.com \uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u6b63\u786e\u8bc6\u522b\u5b83\uff0c\u5982\u4e0b\u6240\u793a codingdict.com","title":"\u8bed\u97f3\u7279\u5f81\u63d0\u53d6"}]}